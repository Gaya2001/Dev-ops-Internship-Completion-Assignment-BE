name: CI/CD Backend Deployment

on:
  push:
    branches:
      - main
    paths:
      - 'Spring-Boot-Backend/**'
      - '.github/workflows/ci-cd-backend.yml'

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout code
      - name: Checkout code
        uses: actions/checkout@v3

      # Step 2: Set up Java for Spring Boot
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'

      # Step 3: Build backend using Maven
      - name: Build backend
        run: mvn -f Spring-Boot-Backend/pom.xml clean package -DskipTests

      # Step 4: Authenticate with GCP
      - name: Authenticate to GCP
        uses: google-github-actions/auth@v1
        with:
          credentials_json: ${{ secrets.GCP_SERVICE_ACCOUNT_KEY }}

      # Step 5: Configure Docker for Artifact Registry
      - name: Configure Docker for Artifact Registry
        run: gcloud auth configure-docker us-central1-docker.pkg.dev

      # Step 6: Build Docker image
      - name: Build Docker image
        run: |
          docker build -t us-central1-docker.pkg.dev/dev-ops-475910/kavindu/backend:latest .

      # Step 7: Push Docker image to Artifact Registry
      - name: Push Docker image
        run: |
          docker push us-central1-docker.pkg.dev/dev-ops-475910/kavindu/backend:latest

      # Step 8: Get GKE credentials (handles auth plugin automatically)
      - name: Get GKE credentials
        uses: google-github-actions/get-gke-credentials@v2
        with:
          cluster_name: ${{ secrets.GKE_CLUSTER_NAME }}
          location: ${{ secrets.GKE_ZONE }}

      # Step 9: Restart deployment in GKE
      - name: Restart deployment
        run: |
          kubectl rollout restart deployment/backend -n kavindu

